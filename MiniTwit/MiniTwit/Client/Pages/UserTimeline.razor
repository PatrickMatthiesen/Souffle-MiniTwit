@inject IHttpClientFactory _httpFactory
@inject AuthenticationStateProvider _authStateProvider
@inject NavigationManager _navManager
@page "/timeline/{Username}"

<h3>@Username's Timeline</h3>

<ContentDisplay text="Loading ..." obj="_messages" Error="@_error">
    <ChildContent>
        <Timeline Messages="_messages" />
    </ChildContent>
</ContentDisplay>

@code {
    [Parameter]
    public string? Username { get; set; }

    private List<MessageDTO> _messages { get; set; }

    private string? _error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (await _authStateProvider.GetUserNameAsync() == Username)
        {
            _navManager.NavigateTo("/my-timeline");
            
        }
        var client = _httpFactory.CreateClient("MiniTwit.UnAuth");

        var result = await client.GetAsync($"api/Message/user/{Username}");
        if (!result.IsSuccessStatusCode)
        {
            _error = "Something went wrong loading the timeline";
            return;
        }
        _messages = await result.Content.ReadFromJsonAsync<List<MessageDTO>>();        
    }
}
